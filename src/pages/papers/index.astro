---
import Layout from "../../layouts/Layout.astro"
import PaperListCard from "../../components/paper/PaperListCard.astro"

import { getCollection } from "astro:content"
let papers_unsorted = await getCollection("papers")

let papers = papers_unsorted
	.map((paper) => {
    if (paper.data.category?.includes("Published")) {
			paper.data.order = 5
		} else if (paper.data.category?.includes("R&R")) {
			paper.data.order = 4
		} else if (paper.data.category?.includes("Submitted")) {
			paper.data.order = 3
		} else if (paper.data.category?.includes("Working Paper")) {
			paper.data.order = 2
		} else if (paper.data.category?.includes("Work in Progress")) {
			paper.data.order = 1
		} else {
			paper.data.order = 0
		}

		return paper
	})
	.sort((a, b) => {
		if (a.data.order == b.data.order) {
			let aDate = new Date(a.data.date)
			let bDate = new Date(b.data.date)

			// getTime is milliseconds since Jan 1, 1970, 00:00:00.000 GMT
			return -1 * (aDate.getTime() - bDate.getTime())
		} else {
			return -1 * (a.data.order - b.data.order)
		}
	})

let publishedPapers = papers.filter((paper) => paper.data.order == 5)
let workingPapers = papers.filter(
	(paper) => paper.data.order < 5 && paper.data.order >= 2
)
let workInProgress = papers.filter((paper) => paper.data.order < 2)
---

<Layout>
	<h2 class="text-mine-shaft-700 text-size-1 font-light tracking-tighter border-b-2 border-dashed border-mine-shaft-200 py-size-2xs">
		Publications
	</h2>
	<ul class="flex flex-col gap-y-size-sm my-size-md">
		{
			publishedPapers.map((paper, i) => {
				return (
					<PaperListCard
						data={paper.data}
						slug={paper.slug}
					/>
				)
			})
		}
	</ul>

  <h2 class="text-mine-shaft-700 text-size-1 font-light tracking-tighter border-b-2 border-dashed border-mine-shaft-200 py-size-2xs">
		Working Papers
	</h2>
	<ul class="flex flex-col gap-y-size-sm my-size-md">
		{
			workingPapers.map((paper, i) => {
				return (
					<PaperListCard
						data={paper.data}
						slug={paper.slug}
					/>
				)
			})
		}
	</ul>

	{
		workInProgress.length > 0 && (
			<>
				<h2 class="text-mine-shaft-700 text-size-1 font-light tracking-tighter border-b-2 border-dashed border-mine-shaft-200 py-size-2xs">
					Work in Progress
				</h2>
				<ul class="flex flex-col gap-y-size-sm my-size-md">
					{workInProgress.map((paper, i) => {
						return (
							<PaperListCard
								data={paper.data}
								slug={paper.slug}
							/>
						)
					})}
				</ul>
			</>
		)
	}
</Layout>
